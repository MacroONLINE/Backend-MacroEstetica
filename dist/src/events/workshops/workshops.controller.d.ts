import { WorkshopsService } from './workshops.service';
export declare class WorkshopsController {
    private readonly workshopsService;
    constructor(workshopsService: WorkshopsService);
    createWorkshop(body: any): Promise<{
        description: string;
        title: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        channelName: string | null;
        endDateTime: Date;
        imageUrl: string | null;
        price: number | null;
        startDateTime: Date;
        categories: import(".prisma/client").$Enums.Profession[];
        isFree: boolean;
        whatYouWillLearn: string | null;
    }>;
    getWorkshop(id: string): Promise<{
        event: {
            title: string;
            target: import(".prisma/client").$Enums.Target | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            endDateTime: Date;
            price: number;
            startDateTime: Date;
            categories: import(".prisma/client").$Enums.Profession[];
            longDescription: string | null;
            mainBannerUrl: string | null;
            mainImageUrl: string | null;
            mapUrl: string | null;
            physicalLocation: string | null;
            leadingCompanyId: string | null;
        };
        enrollments: ({
            user: {
                status: boolean;
                firstName: string | null;
                lastName: string | null;
                phone: string | null;
                address: string | null;
                province: string | null;
                city: string | null;
                country: string | null;
                countryCode: string | null;
                zipCode: string | null;
                password: string;
                id: string;
                email: string;
                emailVerified: Date | null;
                role: import(".prisma/client").$Enums.Role;
                createdAt: Date;
                updatedAt: Date;
                newsletter: boolean;
                userSubscription: string | null;
                profileImageUrl: string | null;
            };
        } & {
            userId: string;
            status: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            workshopId: string;
        })[];
        orators: {
            userId: string;
            type: import(".prisma/client").$Enums.ProfessionType;
            description: string;
            title: string | null;
            profession: import(".prisma/client").$Enums.Profession;
            bannerImage: string | null;
            experienceYears: number;
            certificationsUrl: string;
            status: string;
            empresaId: string | null;
            categoryId: string | null;
            validated: boolean | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            followers: number | null;
            experienceDescription: string;
            genero: import(".prisma/client").$Enums.Gender | null;
        }[];
    } & {
        description: string;
        title: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        channelName: string | null;
        endDateTime: Date;
        imageUrl: string | null;
        price: number | null;
        startDateTime: Date;
        categories: import(".prisma/client").$Enums.Profession[];
        isFree: boolean;
        whatYouWillLearn: string | null;
    }>;
    updateWorkshop(id: string, data: any): Promise<{
        description: string;
        title: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        channelName: string | null;
        endDateTime: Date;
        imageUrl: string | null;
        price: number | null;
        startDateTime: Date;
        categories: import(".prisma/client").$Enums.Profession[];
        isFree: boolean;
        whatYouWillLearn: string | null;
    }>;
    deleteWorkshop(id: string): Promise<{
        message: string;
    }>;
    getWorkshopByChannel(channelName: string): Promise<{
        event: {
            title: string;
            target: import(".prisma/client").$Enums.Target | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            endDateTime: Date;
            price: number;
            startDateTime: Date;
            categories: import(".prisma/client").$Enums.Profession[];
            longDescription: string | null;
            mainBannerUrl: string | null;
            mainImageUrl: string | null;
            mapUrl: string | null;
            physicalLocation: string | null;
            leadingCompanyId: string | null;
        };
        enrollments: ({
            user: {
                status: boolean;
                firstName: string | null;
                lastName: string | null;
                phone: string | null;
                address: string | null;
                province: string | null;
                city: string | null;
                country: string | null;
                countryCode: string | null;
                zipCode: string | null;
                password: string;
                id: string;
                email: string;
                emailVerified: Date | null;
                role: import(".prisma/client").$Enums.Role;
                createdAt: Date;
                updatedAt: Date;
                newsletter: boolean;
                userSubscription: string | null;
                profileImageUrl: string | null;
            };
        } & {
            userId: string;
            status: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            workshopId: string;
        })[];
        orators: {
            userId: string;
            type: import(".prisma/client").$Enums.ProfessionType;
            description: string;
            title: string | null;
            profession: import(".prisma/client").$Enums.Profession;
            bannerImage: string | null;
            experienceYears: number;
            certificationsUrl: string;
            status: string;
            empresaId: string | null;
            categoryId: string | null;
            validated: boolean | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            followers: number | null;
            experienceDescription: string;
            genero: import(".prisma/client").$Enums.Gender | null;
        }[];
    } & {
        description: string;
        title: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        channelName: string | null;
        endDateTime: Date;
        imageUrl: string | null;
        price: number | null;
        startDateTime: Date;
        categories: import(".prisma/client").$Enums.Profession[];
        isFree: boolean;
        whatYouWillLearn: string | null;
    }>;
}
