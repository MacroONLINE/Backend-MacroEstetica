import { InstructorService } from './instructor.service';
import { CreateInstructorDto } from './dto/create-instructor.dto';
import { Prisma } from '@prisma/client';
export declare class InstructorController {
    private readonly instructorService;
    constructor(instructorService: InstructorService);
    createInstructor(createInstructorDto: CreateInstructorDto): Promise<{
        user: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
        };
        empresa: {
            subscription: import(".prisma/client").$Enums.SubscriptionType | null;
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            dni: string | null;
            giro: import(".prisma/client").$Enums.Giro;
            bannerImage: string | null;
            categoria: import(".prisma/client").$Enums.EmpresaCategory;
            ceo: string | null;
            ceoRole: string | null;
            followers: number;
            location: string | null;
            logo: string | null;
            profileImage: string | null;
            title: string | null;
            webUrl: string | null;
            legalName: string | null;
        };
        category: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            urlIcon: string;
            colorHex: string;
        };
        courses: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            rating: number;
            title: string;
            categoryId: string;
            price: number;
            target: import(".prisma/client").$Enums.Target;
            whatYouWillLearn: Prisma.JsonValue | null;
            bannerUrl: string;
            level: string;
            commentsCount: number;
            averageRating: number;
            discountPercentage: number | null;
            participantsCount: number;
            isFeatured: boolean | null;
            courseImageUrl: string;
            aboutDescription: string | null;
            requirements: Prisma.JsonValue | null;
            totalHours: number;
            introductoryVideoUrl: string | null;
            instructorId: string | null;
        }[];
    } & {
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        description: string;
        experienceYears: number;
        certificationsUrl: string;
        userId: string;
        bannerImage: string | null;
        followers: number | null;
        title: string | null;
        profession: import(".prisma/client").$Enums.Profession;
        type: import(".prisma/client").$Enums.ProfessionType;
        experienceDescription: string;
        empresaId: string | null;
        categoryId: string | null;
    }>;
    getAllInstructors(): Promise<({
        user: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
        };
        empresa: {
            subscription: import(".prisma/client").$Enums.SubscriptionType | null;
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            dni: string | null;
            giro: import(".prisma/client").$Enums.Giro;
            bannerImage: string | null;
            categoria: import(".prisma/client").$Enums.EmpresaCategory;
            ceo: string | null;
            ceoRole: string | null;
            followers: number;
            location: string | null;
            logo: string | null;
            profileImage: string | null;
            title: string | null;
            webUrl: string | null;
            legalName: string | null;
        };
        category: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            urlIcon: string;
            colorHex: string;
        };
        courses: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            rating: number;
            title: string;
            categoryId: string;
            price: number;
            target: import(".prisma/client").$Enums.Target;
            whatYouWillLearn: Prisma.JsonValue | null;
            bannerUrl: string;
            level: string;
            commentsCount: number;
            averageRating: number;
            discountPercentage: number | null;
            participantsCount: number;
            isFeatured: boolean | null;
            courseImageUrl: string;
            aboutDescription: string | null;
            requirements: Prisma.JsonValue | null;
            totalHours: number;
            introductoryVideoUrl: string | null;
            instructorId: string | null;
        }[];
    } & {
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        description: string;
        experienceYears: number;
        certificationsUrl: string;
        userId: string;
        bannerImage: string | null;
        followers: number | null;
        title: string | null;
        profession: import(".prisma/client").$Enums.Profession;
        type: import(".prisma/client").$Enums.ProfessionType;
        experienceDescription: string;
        empresaId: string | null;
        categoryId: string | null;
    })[]>;
    getInstructorById(id: string): Promise<{
        user: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
        };
        empresa: {
            subscription: import(".prisma/client").$Enums.SubscriptionType | null;
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            dni: string | null;
            giro: import(".prisma/client").$Enums.Giro;
            bannerImage: string | null;
            categoria: import(".prisma/client").$Enums.EmpresaCategory;
            ceo: string | null;
            ceoRole: string | null;
            followers: number;
            location: string | null;
            logo: string | null;
            profileImage: string | null;
            title: string | null;
            webUrl: string | null;
            legalName: string | null;
        };
        category: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            urlIcon: string;
            colorHex: string;
        };
        courses: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            rating: number;
            title: string;
            categoryId: string;
            price: number;
            target: import(".prisma/client").$Enums.Target;
            whatYouWillLearn: Prisma.JsonValue | null;
            bannerUrl: string;
            level: string;
            commentsCount: number;
            averageRating: number;
            discountPercentage: number | null;
            participantsCount: number;
            isFeatured: boolean | null;
            courseImageUrl: string;
            aboutDescription: string | null;
            requirements: Prisma.JsonValue | null;
            totalHours: number;
            introductoryVideoUrl: string | null;
            instructorId: string | null;
        }[];
    } & {
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        description: string;
        experienceYears: number;
        certificationsUrl: string;
        userId: string;
        bannerImage: string | null;
        followers: number | null;
        title: string | null;
        profession: import(".prisma/client").$Enums.Profession;
        type: import(".prisma/client").$Enums.ProfessionType;
        experienceDescription: string;
        empresaId: string | null;
        categoryId: string | null;
    }>;
    getInstructorsByCategory(categoryId: string): Promise<({
        user: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
        };
        empresa: {
            subscription: import(".prisma/client").$Enums.SubscriptionType | null;
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            dni: string | null;
            giro: import(".prisma/client").$Enums.Giro;
            bannerImage: string | null;
            categoria: import(".prisma/client").$Enums.EmpresaCategory;
            ceo: string | null;
            ceoRole: string | null;
            followers: number;
            location: string | null;
            logo: string | null;
            profileImage: string | null;
            title: string | null;
            webUrl: string | null;
            legalName: string | null;
        };
        category: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            urlIcon: string;
            colorHex: string;
        };
        courses: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            rating: number;
            title: string;
            categoryId: string;
            price: number;
            target: import(".prisma/client").$Enums.Target;
            whatYouWillLearn: Prisma.JsonValue | null;
            bannerUrl: string;
            level: string;
            commentsCount: number;
            averageRating: number;
            discountPercentage: number | null;
            participantsCount: number;
            isFeatured: boolean | null;
            courseImageUrl: string;
            aboutDescription: string | null;
            requirements: Prisma.JsonValue | null;
            totalHours: number;
            introductoryVideoUrl: string | null;
            instructorId: string | null;
        }[];
    } & {
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        description: string;
        experienceYears: number;
        certificationsUrl: string;
        userId: string;
        bannerImage: string | null;
        followers: number | null;
        title: string | null;
        profession: import(".prisma/client").$Enums.Profession;
        type: import(".prisma/client").$Enums.ProfessionType;
        experienceDescription: string;
        empresaId: string | null;
        categoryId: string | null;
    })[]>;
    getInstructorsByEmpresa(empresaId: string): Promise<({
        user: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
        };
        empresa: {
            subscription: import(".prisma/client").$Enums.SubscriptionType | null;
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            dni: string | null;
            giro: import(".prisma/client").$Enums.Giro;
            bannerImage: string | null;
            categoria: import(".prisma/client").$Enums.EmpresaCategory;
            ceo: string | null;
            ceoRole: string | null;
            followers: number;
            location: string | null;
            logo: string | null;
            profileImage: string | null;
            title: string | null;
            webUrl: string | null;
            legalName: string | null;
        };
        category: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            urlIcon: string;
            colorHex: string;
        };
        courses: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            rating: number;
            title: string;
            categoryId: string;
            price: number;
            target: import(".prisma/client").$Enums.Target;
            whatYouWillLearn: Prisma.JsonValue | null;
            bannerUrl: string;
            level: string;
            commentsCount: number;
            averageRating: number;
            discountPercentage: number | null;
            participantsCount: number;
            isFeatured: boolean | null;
            courseImageUrl: string;
            aboutDescription: string | null;
            requirements: Prisma.JsonValue | null;
            totalHours: number;
            introductoryVideoUrl: string | null;
            instructorId: string | null;
        }[];
    } & {
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        description: string;
        experienceYears: number;
        certificationsUrl: string;
        userId: string;
        bannerImage: string | null;
        followers: number | null;
        title: string | null;
        profession: import(".prisma/client").$Enums.Profession;
        type: import(".prisma/client").$Enums.ProfessionType;
        experienceDescription: string;
        empresaId: string | null;
        categoryId: string | null;
    })[]>;
    updateInstructor(id: string, data: Prisma.InstructorUpdateInput): Promise<{
        user: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
        };
        empresa: {
            subscription: import(".prisma/client").$Enums.SubscriptionType | null;
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            dni: string | null;
            giro: import(".prisma/client").$Enums.Giro;
            bannerImage: string | null;
            categoria: import(".prisma/client").$Enums.EmpresaCategory;
            ceo: string | null;
            ceoRole: string | null;
            followers: number;
            location: string | null;
            logo: string | null;
            profileImage: string | null;
            title: string | null;
            webUrl: string | null;
            legalName: string | null;
        };
        category: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            urlIcon: string;
            colorHex: string;
        };
        courses: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            rating: number;
            title: string;
            categoryId: string;
            price: number;
            target: import(".prisma/client").$Enums.Target;
            whatYouWillLearn: Prisma.JsonValue | null;
            bannerUrl: string;
            level: string;
            commentsCount: number;
            averageRating: number;
            discountPercentage: number | null;
            participantsCount: number;
            isFeatured: boolean | null;
            courseImageUrl: string;
            aboutDescription: string | null;
            requirements: Prisma.JsonValue | null;
            totalHours: number;
            introductoryVideoUrl: string | null;
            instructorId: string | null;
        }[];
    } & {
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        description: string;
        experienceYears: number;
        certificationsUrl: string;
        userId: string;
        bannerImage: string | null;
        followers: number | null;
        title: string | null;
        profession: import(".prisma/client").$Enums.Profession;
        type: import(".prisma/client").$Enums.ProfessionType;
        experienceDescription: string;
        empresaId: string | null;
        categoryId: string | null;
    }>;
    deleteInstructor(id: string): Promise<{
        user: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
        };
        empresa: {
            subscription: import(".prisma/client").$Enums.SubscriptionType | null;
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            dni: string | null;
            giro: import(".prisma/client").$Enums.Giro;
            bannerImage: string | null;
            categoria: import(".prisma/client").$Enums.EmpresaCategory;
            ceo: string | null;
            ceoRole: string | null;
            followers: number;
            location: string | null;
            logo: string | null;
            profileImage: string | null;
            title: string | null;
            webUrl: string | null;
            legalName: string | null;
        };
        category: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            urlIcon: string;
            colorHex: string;
        };
        courses: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            rating: number;
            title: string;
            categoryId: string;
            price: number;
            target: import(".prisma/client").$Enums.Target;
            whatYouWillLearn: Prisma.JsonValue | null;
            bannerUrl: string;
            level: string;
            commentsCount: number;
            averageRating: number;
            discountPercentage: number | null;
            participantsCount: number;
            isFeatured: boolean | null;
            courseImageUrl: string;
            aboutDescription: string | null;
            requirements: Prisma.JsonValue | null;
            totalHours: number;
            introductoryVideoUrl: string | null;
            instructorId: string | null;
        }[];
    } & {
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        description: string;
        experienceYears: number;
        certificationsUrl: string;
        userId: string;
        bannerImage: string | null;
        followers: number | null;
        title: string | null;
        profession: import(".prisma/client").$Enums.Profession;
        type: import(".prisma/client").$Enums.ProfessionType;
        experienceDescription: string;
        empresaId: string | null;
        categoryId: string | null;
    }>;
}
