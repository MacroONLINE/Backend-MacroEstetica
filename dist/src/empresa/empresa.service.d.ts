import { PrismaService } from '../prisma/prisma.service';
import { Giro, Target } from '@prisma/client';
export declare class EmpresaService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    getAllByCategory(category: Giro): Promise<({
        user: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            email: string;
            emailVerified: Date | null;
            address: string | null;
            province: string | null;
            city: string | null;
            country: string | null;
            countryCode: string | null;
            zipCode: string | null;
            role: import(".prisma/client").$Enums.Role;
            password: string;
            status: boolean;
            newsletter: boolean;
        };
    } & {
        id: string;
        dni: string | null;
        name: string;
        giro: import(".prisma/client").$Enums.Giro;
        categoria: import(".prisma/client").$Enums.EmpresaCategory;
        userId: string;
        createdAt: Date;
        updatedAt: Date;
        subscription: import(".prisma/client").$Enums.SubscriptionType | null;
        bannerImage: string | null;
        logo: string | null;
        title: string | null;
        profileImage: string | null;
        ceo: string | null;
        ceoRole: string | null;
        location: string | null;
        followers: number;
    })[]>;
    getAllByGiro(giro: Giro): Promise<({
        user: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            email: string;
            emailVerified: Date | null;
            address: string | null;
            province: string | null;
            city: string | null;
            country: string | null;
            countryCode: string | null;
            zipCode: string | null;
            role: import(".prisma/client").$Enums.Role;
            password: string;
            status: boolean;
            newsletter: boolean;
        };
    } & {
        id: string;
        dni: string | null;
        name: string;
        giro: import(".prisma/client").$Enums.Giro;
        categoria: import(".prisma/client").$Enums.EmpresaCategory;
        userId: string;
        createdAt: Date;
        updatedAt: Date;
        subscription: import(".prisma/client").$Enums.SubscriptionType | null;
        bannerImage: string | null;
        logo: string | null;
        title: string | null;
        profileImage: string | null;
        ceo: string | null;
        ceoRole: string | null;
        location: string | null;
        followers: number;
    })[]>;
    getAllByTarget(target: Target): Promise<({
        user: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            email: string;
            emailVerified: Date | null;
            address: string | null;
            province: string | null;
            city: string | null;
            country: string | null;
            countryCode: string | null;
            zipCode: string | null;
            role: import(".prisma/client").$Enums.Role;
            password: string;
            status: boolean;
            newsletter: boolean;
        };
    } & {
        id: string;
        dni: string | null;
        name: string;
        giro: import(".prisma/client").$Enums.Giro;
        categoria: import(".prisma/client").$Enums.EmpresaCategory;
        userId: string;
        createdAt: Date;
        updatedAt: Date;
        subscription: import(".prisma/client").$Enums.SubscriptionType | null;
        bannerImage: string | null;
        logo: string | null;
        title: string | null;
        profileImage: string | null;
        ceo: string | null;
        ceoRole: string | null;
        location: string | null;
        followers: number;
    })[]>;
    getAllByGiroAndTarget(giro: Giro, target: Target): Promise<({
        user: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            email: string;
            emailVerified: Date | null;
            address: string | null;
            province: string | null;
            city: string | null;
            country: string | null;
            countryCode: string | null;
            zipCode: string | null;
            role: import(".prisma/client").$Enums.Role;
            password: string;
            status: boolean;
            newsletter: boolean;
        };
    } & {
        id: string;
        dni: string | null;
        name: string;
        giro: import(".prisma/client").$Enums.Giro;
        categoria: import(".prisma/client").$Enums.EmpresaCategory;
        userId: string;
        createdAt: Date;
        updatedAt: Date;
        subscription: import(".prisma/client").$Enums.SubscriptionType | null;
        bannerImage: string | null;
        logo: string | null;
        title: string | null;
        profileImage: string | null;
        ceo: string | null;
        ceoRole: string | null;
        location: string | null;
        followers: number;
    })[]>;
}
